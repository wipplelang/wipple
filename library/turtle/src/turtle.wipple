-- The distance (in pixels) the turtle should move.
Distance : type Number

instance (Describe-Type Distance "distance")

-- Specify a distance in pixels.
pixels :: Number -> Distance
pixels : Distance

_ where (Error ("Missing `pixels` after `_`" Source ; Error-Description ("Try rewriting this code as `(_ pixels)`, or double-check your parentheses." Source))) =>
  instance (Mismatch Number Distance)

-- Move the turtle forward by a distance.
forward :: Distance -> Unit
forward : (Distance pixels) -> external "forward" pixels

-- Move the turtle backward by a distance.
backward :: Distance -> Unit
backward : (Distance pixels) -> external "backward" pixels

-- An arc.
Arc : type {
  radius :: Distance
  angle :: Angle
}

-- Move the turtle along an arc.
arc :: Arc -> Unit
arc : {
  radius : (Distance radius)
  angle : (Angle angle)
} -> external "arc" (radius ; angle)

-- Rotate the turtle counterclockwise by an angle.
left :: Angle -> Unit
left : (Angle degrees) -> external "left" degrees

-- Rotate the turtle clockwise by an angle.
right :: Angle -> Unit
right : (Angle degrees) -> external "right" degrees

-- Go to a position on the screen without drawing.
go :: Distance Distance -> Unit
go : (Distance x) (Distance y) -> external "go" (x ; y)

-- Set the pen color.
color :: Color -> Unit
color : (Color color) -> external "color" color

-- Draw a path and fill it with a color.
fill :: Result => Color {Result} -> Result
fill : (Color color) body -> do {
  external "beginPath" Unit
  result : do body
  external "endPath" color
  result
}

-- Set the speed of the turtle, from `0` to `100`. The default speed is `50`.
speed :: Number -> Unit
speed : value -> external "speed" value

-- An animal to use instead of the turtle.
Animal : type Text
instance (Describe-Type Animal "animal")

-- Change the animal being displayed.
animal :: Animal -> Unit
animal : (Animal name) -> external "animal" name
