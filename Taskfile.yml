version: "3"

tasks:
    dev:
        run: once
        cmds:
            - task: compile
            - .wipple/out

    test:
        run: once
        cmds:
            - cargo test --package=wipple-test -- {{.CLI_ARGS}}

    test-with-coverage:
        run: once
        cmds:
            - RUSTFLAGS="-Cinstrument-coverage -Clink-dead-code" LLVM_PROFILE_FILE="./target/debug/coverage-%p-%m.profraw" cargo test --package=wipple-test -- --test-threads=1 {{.CLI_ARGS}}
            - task: coverage

    coverage:
        run: once
        cmds:
            - |
                if ! [[ -z "$CI" ]]; then
                    rustup component add llvm-tools-preview
                fi

                if ! command -v grcov; then
                    cargo install grcov --force
                fi
            - rm -rf coverage && mkdir -p coverage
            - grcov . --binary-path target/debug/ -s . -t cobertura,html --branch --ignore-not-existing --keep-only 'compiler/**/*' --keep-only 'interpreter/**/*' --keep-only 'render/**/*' -o coverage

    # doctest:
    #     run: once
    #     cmds:
    #         - rm -rf .wipple/doctest && mkdir -p .wipple/doctest
    #         - for f in web/docs/src/tour/*.md; do echo -e "testing $(basename $f)" && wipple doctest $f --dependency .wipple/base.wippleinterface --link .wipple/base.wipplelibrary > .wipple/doctest/$(basename $f).xml; done

    compile:
        run: once
        deps:
            - base:compile
        cmds:
            - cargo run --bin wipple -- compile test.wipple --dependency .wipple/base.wippleinterface --interface .wipple/test.wippleinterface --library .wipple/test.wipplelibrary {{.CLI_ARGS}}
            - cargo run --bin wipple -- link .wipple/*.wipplelibrary --output .wipple/out

    cli:install:
        run: once
        dir: cli
        cmds:
            - cargo install --bin wipple --path . --force

    vscode:install:
        run: once
        dir: vscode
        cmds:
            - npx @vscode/vsce package --no-dependencies --skip-license --allow-missing-repository
            - code --install-extension wipple-vscode-0.0.0.vsix
            - rm wipple-vscode-0.0.0.vsix

    install-dependencies:
        run: once
        deps:
            - web:install-dependencies
        cmds:
            - npm install

    wasm:install-dependencies:
        run: once
        dir: wasm
        cmds:
            - if ! command -v wasm-pack; then cargo install --force wasm-pack; fi

    wasm:build:
        run: once
        dir: wasm
        cmds:
            - ./build.sh

    playground:bundle:
        run: once
        dir: playground
        cmds:
            - task base:compile
            - cargo run --bin wipple -- compile ../library/base/*.wipple --interface ../.wipple/base.wippleinterface --library ../.wipple/base.wipplelibrary
            - cargo run --bin wipple -- bundle-for-playground ../library/base/*.wipple --output ./public/library/base.wipplebundle
            - cargo run --bin wipple -- compile ../library/playground/turtle.wipple --dependency ../.wipple/base.wippleinterface --interface ../.wipple/turtle.wippleinterface
            - cargo run --bin wipple -- bundle-for-playground ../library/playground/turtle.wipple --dependency ../.wipple/base.wippleinterface --link ../.wipple/base.wipplelibrary --output ./public/library/turtle.wipplebundle
            - cargo run --bin wipple -- compile ../library/playground/music.wipple --dependency ../.wipple/base.wippleinterface --interface ../.wipple/music.wippleinterface
            - cargo run --bin wipple -- bundle-for-playground ../library/playground/music.wipple --dependency ../.wipple/base.wippleinterface --link ../.wipple/base.wipplelibrary --output ./public/library/music.wipplebundle
            - cargo run --bin wipple -- compile ../library/playground/math.wipple --dependency ../.wipple/base.wippleinterface --interface ../.wipple/math.wippleinterface
            - cargo run --bin wipple -- bundle-for-playground ../library/playground/math.wipple --dependency ../.wipple/base.wippleinterface --link ../.wipple/base.wipplelibrary --output ./public/library/math.wipplebundle
            - cargo run --bin wipple -- compile ../library/playground/game.wipple --dependency ../.wipple/base.wippleinterface --interface ../.wipple/game.wippleinterface
            - cargo run --bin wipple -- bundle-for-playground ../library/playground/game.wipple --dependency ../.wipple/base.wippleinterface --link ../.wipple/base.wipplelibrary --output ./public/library/game.wipplebundle
            - cargo run --bin wipple -- compile ../library/playground/physics.wipple --dependency ../.wipple/base.wippleinterface --interface ../.wipple/physics.wippleinterface
            - cargo run --bin wipple -- bundle-for-playground ../library/playground/physics.wipple --dependency ../.wipple/base.wippleinterface --link ../.wipple/base.wipplelibrary --output ./public/library/physics.wipplebundle
            - cp -r ../library/help ./public/library

    playground:build:
        run: once
        deps:
            - playground:bundle
            - wasm:build
        dir: playground
        cmds:
            - npm run build

    web:install-dependencies:
        run: once
        deps:
            - web:home:install-dependencies
            - web:login:install-dependencies
            - web:docs:install-dependencies
            - web:doc-template:install-dependencies

    web:serve:
        run: once
        deps:
            - web:build
        cmds:
            - netlify dev --filter wipple-playground-web

    web:build:
        run: once
        deps:
            - web:home:build
            - web:login:build
            - web:docs:build
            - web:doc-template:build
            - web:playground:build
        dir: web
        cmds:
            - rm -rf dist && mkdir dist
            - cp -r home/_site/. dist
            - cp -r login/dist/. dist/login
            - cp -r docs/book/. dist/docs
            - cp doc-template/dist/index.html dist/doc-template.html
            - cp -r playground/dist/. dist/playground
            - task: web:library:docs:build

    web:home:install-dependencies:
        run: once
        dir: web/home
        cmds:
            - npm install

    web:home:serve:
        run: once
        dir: web/home
        cmds:
            - npm run dev

    web:home:build:
        run: once
        dir: web/home
        cmds:
            - npm run build

    web:login:install-dependencies:
        run: once
        dir: web/login
        cmds:
            - npm install

    web:login:serve:
        run: once
        dir: web/login
        cmds:
            - npm run dev

    web:login:build:
        run: once
        dir: web/login
        cmds:
            - npm run build

    web:docs:install-dependencies:
        run: once
        dir: web/docs
        cmds:
            - if ! command -v mdbook; then cargo install --force mdbook; fi
            - if ! command -v mdbook-template; then cargo install --force mdbook-template; fi
            - if ! command -v mdbook-mermaid; then cargo install --force mdbook-mermaid; fi

    web:docs:prepare:
        run: once
        dir: web/docs
        cmds:
            - (cd ../../compiler && cargo test render_grammar_to_html)

    web:docs:serve:
        run: once
        deps:
            - web:docs:prepare
        dir: web/docs
        cmds:
            - mdbook serve

    web:docs:build:
        run: once
        deps:
            - web:docs:prepare
        dir: web/docs
        cmds:
            - mdbook build

    web:doc-template:install-dependencies:
        run: once
        dir: web/doc-template
        cmds:
            - npm install

    web:doc-template:build:
        run: once
        dir: web/doc-template
        cmds:
            - npm run build

    web:playground:serve:
        run: once
        deps:
            - playground:build
        dir: web/playground
        cmds:
            - npm run dev

    web:playground:build:
        run: once
        deps:
            - playground:build
        dir: web/playground
        cmds:
            - npm run build

    web:library:docs:build:
        run: once
        deps:
            - web:doc-template:build
            - playground:bundle
        dir: web
        cmds:
            - mkdir -p dist/library/docs
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/base.wippleinterface --title 'Wipple Standard Library' --output ./dist/library/docs/base.html
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/turtle.wippleinterface --filter 'playground/turtle.wipple' --title 'Turtle' --output ./dist/library/docs/turtle.html
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/music.wippleinterface --filter 'playground/music.wipple' --title 'Music' --output ./dist/library/docs/music.html
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/math.wippleinterface --filter 'playground/math.wipple' --title 'Math' --output ./dist/library/docs/math.html
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/game.wippleinterface --filter 'playground/game.wipple' --title 'Game' --output ./dist/library/docs/game.html
            - cargo run --bin wipple -- doc --template-path ./doc-template/dist/index.html ../.wipple/physics.wippleinterface --filter 'playground/physics.wipple' --title 'Physics' --output ./dist/library/docs/physics.html

    ios:build:
        run: once
        deps:
            - playground:build
        dir: ios/wrapper
        cmds:
            - npm run build

    base:compile:
        run: once
        cmds:
            - rm -rf .wipple
            - cargo run --bin wipple -- compile library/base/*.wipple --interface .wipple/base.wippleinterface --library .wipple/base.wipplelibrary
