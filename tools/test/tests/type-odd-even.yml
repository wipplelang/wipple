code: |
    Z : type
    S : Num => type

    Add : A B AB => trait (A , B , AB)
    A => instance (Add Z A A) : ...
    A B AB where (Add A B AB) => instance (Add (S A) B (S AB)) : ...

    Odd : type
    Even : type

    Odd-Even : Num Is-Odd => trait (Num , Is-Odd)
    instance (Odd-Even Z Even) : ...
    Num where (Odd-Even Num Even) => instance (Odd-Even (S Num) Odd) : ...
    Num where (Odd-Even Num Odd) => instance (Odd-Even (S Num) Even) : ...

    _ : _ -> (Odd-Even :: Z , _)
    _ : _ -> (Odd-Even :: S Z , _)
    _ : _ -> (Odd-Even :: S (S Z) , _)
    _ : _ -> (Odd-Even :: S (S (S Z)) , _)
    _ : _ -> (Odd-Even :: S (S (S (S Z))) , _)

output: |

diagnostics: |
    error: could not determine the type of this expression
       ┌─ test:16:5
       │
    16 │ _ : _ -> (Odd-Even :: Z , _)
       │     ^^^^^^^^^^^^^^^^^^^^^^^^
       │     │
       │     try annotating the type with `::`
       │     this has type `a -> Z , Even` for some unknown type `a`
    
    error: could not determine the type of this expression
       ┌─ test:17:5
       │
    17 │ _ : _ -> (Odd-Even :: S Z , _)
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^
       │     │
       │     try annotating the type with `::`
       │     this has type `a -> S Z , Odd` for some unknown type `a`
    
    error: could not determine the type of this expression
       ┌─ test:18:5
       │
    18 │ _ : _ -> (Odd-Even :: S (S Z) , _)
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       │     │
       │     try annotating the type with `::`
       │     this has type `a -> S (S Z) , Even` for some unknown type `a`
    
    error: could not determine the type of this expression
       ┌─ test:19:5
       │
    19 │ _ : _ -> (Odd-Even :: S (S (S Z)) , _)
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       │     │
       │     try annotating the type with `::`
       │     this has type `a -> S (S (S Z)) , Odd` for some unknown type `a`
    
    error: could not determine the type of this expression
       ┌─ test:20:5
       │
    20 │ _ : _ -> (Odd-Even :: S (S (S (S Z))) , _)
       │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       │     │
       │     try annotating the type with `::`
       │     this has type `a -> S (S (S (S Z))) , Even` for some unknown type `a`