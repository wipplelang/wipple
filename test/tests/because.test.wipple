-- [should error]

Distance : type
instance (Describe-Type Distance "distance")

Time : type
instance (Describe-Type Time "time")

meters :: Number -> Distance
meters : ...

instance (Add Distance Distance Distance) : ...

Left Right where (Because (Left ; Right ; ("this is _ because multiplying _ by _ produces _" Time Left Right Time))) =>
    instance (Multiply (Left = Number) (Right = Time) Time) : ...

position :: (Time -> Distance) -> Unit
position : ...

x0 : 0 meters
v : 1 -- no unit

position (t -> x0 + v * t)
