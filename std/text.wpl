[[no-std]]

use "sequence"
use "fp"
use "math"

instance (Add Text Text Text) : b a -> "__" a b

instance (As-Sequence Text Text) : text -> \
  As-Sequence (semantics "pure" (intrinsic "text-characters" text :: List Text))

instance (From-Sequence Text Text) : seq -> {
  text : mutable ""
  repeat {
    when (next seq) {
      Some c -> {
        text . set! ("__" (get text) c)
        Continue
      }
      None -> Break ()
    }
  }

  get text
}

[specialize]
join :: Text -> Text -> Text
join : (+)
