-- The distance (in pixels) the turtle should move.
Distance : type Number

-- Specify a distance in pixels.
pixels :: Number -> Distance
pixels : Distance

Distance? : D => trait (D -> Distance)
D where (Error "expected a distance in `pixels`") => default instance (Distance? D) : ...
instance (Distance? Distance) : distance -> distance
A where (Error "missing unit for distance; try adding `pixels`") => instance (Distance? Number) : ...

-- Move the turtle forward by the specified distance.
forward :: (D : Distance) where (Distance? D) => D -> ()
forward : distance -> do {
    (Distance pixels) : Distance? distance
    runtime-message "forward" pixels
}

-- Move the turtle backward by the specified distance.
backward :: (D : Distance) where (Distance? D) => D -> ()
backward : distance -> do {
    (Distance pixels) : Distance? distance
    runtime-message "backward" pixels
}

-- An arc.
Arc : type {
    radius :: Distance
    angle :: Angle
}

-- Move the turtle along an arc.
arc :: Arc -> ()
arc : {
    radius : (Distance radius)
    angle : (Angle angle)
} -> runtime-message "arc" (radius ; angle)

-- Rotate the turtle counterclockwise by the specified angle.
left :: (A : Angle) where (Angle? A) => A -> ()
left : angle -> do {
    (Angle degrees) : Angle? angle
    runtime-message "left" degrees
}

-- Rotate the turtle clockwise by the specified angle.
right :: (A : Angle) where (Angle? A) => A -> ()
right : angle -> do {
    (Angle degrees) : Angle? angle
    runtime-message "right" degrees
}

-- Set the pen color.
color :: Color -> ()
color : (Color color) -> runtime-message "color" color

-- Draw a path and fill it with the specified color.
fill :: Result => Color {Result} -> Result
fill : (Color color) body -> do {
    runtime-message "begin-path" ()
    result : do body
    runtime-message "end-path" color
    result
}

-- The speed of the turtle, from `very-slow` to `very-fast`.
Speed : type Number

-- A very slow speed.
very-slow :: Speed
very-slow : Speed 0

-- A slow speed.
slow :: Speed
slow : Speed 0.25

-- A fast speed.
fast :: Speed
fast : Speed 0.75

-- A very fast speed.
very-fast :: Speed
very-fast : Speed 1

-- Set the speed of the turtle.
speed :: Speed -> ()
speed : (Speed value) -> runtime-message "speed" value
