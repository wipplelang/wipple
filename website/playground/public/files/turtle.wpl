Angle : type {
	degrees :: Number
}

[help "Produce an angle in degrees."]
[help-group "Turtle Graphics"]
degrees :: Number -> Angle
degrees : degrees -> Angle { degrees }

[help "Produce an angle in radians."]
[help-group "Turtle Graphics"]
radians :: Number -> Angle
radians : radians -> degrees (radians * 180 / 3.14159)


Turtle : type {
	handle :: UI
}

[help "Make a drawing using turtle graphics."]
[help-group "Turtle Graphics"]
with-turtle :: (Turtle -> ()) -> ()
with-turtle : f ->
	with-ui "/playground/ui/turtle/index.js" (handle -> f (Turtle { handle }))


[help "Set the width of the canvas."]
[help-group "Turtle Graphics"]
width :: Number -> Turtle -> ()
width : width -> { handle } ->
	handle . message "width" width

[help "Set the height of the canvas."]
[help-group "Turtle Graphics"]
height :: Number -> Turtle -> ()
height : height -> { handle } ->
	handle . message "height" height

[help "Set the background color of the canvas."]
[help-group "Turtle Graphics"]
background :: Text -> Turtle -> ()
background : color -> { handle } ->
	handle . message "background" color

[help "Set the x-y position of the turtle."]
[help-group "Turtle Graphics"]
position :: (Number , Number) -> Turtle -> ()
position : (x , y) -> { handle } -> {
	handle . message "position-x" x
	handle . message "position-y" y
}

[help "Lift the pen up, allowing the turtle to move without drawing."]
[help-group "Turtle Graphics"]
pen-up :: Turtle -> ()
pen-up : { handle } ->
	handle . message "pen-up" ()

[help "Put the pen back down so the turtle can draw again."]
[help-group "Turtle Graphics"]
pen-down :: Turtle -> ()
pen-down : { handle } ->
	handle . message "pen-down" ()

[help "Set the pen color."]
[help-group "Turtle Graphics"]
color :: Text -> Turtle -> ()
color : color -> { handle } ->
	handle . message "color" color

[help "Fill a previously created `path` with a color."]
[help-group "Turtle Graphics"]
fill :: Text -> Turtle -> ()
fill : color -> { handle } ->
	handle . message "fill" color


[help "Group a set of strokes into a path that can be `fill`ed."]
[help-group "Turtle Graphics"]
path :: (() -> ()) -> Turtle -> ()
path : f -> { handle } -> {
	handle . message "begin-path" ()
	f ()
	handle . message "close-path" ()
}


[help "Move the turtle forward by the specified amount."]
[help-group "Turtle Graphics"]
forward :: Number -> Turtle -> ()
forward : px -> { handle } ->
	handle . message "forward" px


[help "Move the turtle backward by the specified amount."]
[help-group "Turtle Graphics"]
backward :: Number -> Turtle -> ()
backward : px -> { handle } ->
	handle . message "backward" px

[help "Turn the turtle left by the specified angle."]
[help-group "Turtle Graphics"]
left :: Angle -> Turtle -> ()
left : { degrees } -> { handle } ->
	handle . message "left" degrees

[help "Turn the turtle right by the specified angle."]
[help-group "Turtle Graphics"]
right :: Angle -> Turtle -> ()
right : { degrees } -> { handle } ->
	handle . message "right" degrees
