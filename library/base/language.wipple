Number : type intrinsic
intrinsic "type" "number" : Number

Text : type intrinsic
intrinsic "type" "text" : Text

Maybe : Value => type {
    None
    Some Value
}

intrinsic "type" "maybe" : Maybe
intrinsic "constant" "none" : None
intrinsic "constant" "some" : Some

As : Input Output => trait (Input -> Output)
intrinsic "trait" "as" : As

Input Output where (Error ("cannot convert a _ into _" Input Output)) =>
    default instance (As Input Output) : ...

Value => instance (As Value Value) : value -> value

error :: (Value : ()) => Text -> Value
error : message -> intrinsic "crash" message

... :: Value => Value
... : error "not implemented"

assert :: Text -> Boolean -> ()
assert : message -> condition -> if condition {} {error message}

unreachable :: Value => Value
unreachable : error "unreachable"

-- Represents the default or initial value of a type.
Empty : Value => trait Value

Value where (Error ("_ has no empty value" Value)) =>
    default instance (Empty Value) : ...

instance (Empty Number) : 0
instance (Empty Text) : ""
instance (Empty Boolean) : False
Value => instance (Empty (Maybe Value)) : None

-- Send a message to the runtime.
runtime-message :: Input (Output : ()) => Text Input -> Output
runtime-message : message data -> intrinsic "runtime-message" message data

-- Generate a compile-time error with the provided information. You may provide
-- a single message, or a tuple with multiple pieces of information. Valid types
-- for this tuple include text, `Error-Fix`, and `Error-Location`.
--
-- ## Example
--
-- ```wipple
-- -- Display "cannot multiply two pieces of text" rather than
-- -- "this code requires `(Multiply Text Text)`"
-- (infer Output) where (Error "cannot multiply two pieces of text") =>
--   instance (Multiply Text Text Output) : unreachable
-- ```
Error : Info => trait intrinsic
Info => instance (Error Info) : unreachable
intrinsic "trait" "error" : Error

-- Change the location of a compile-time error generated by the `Error` trait.
-- `Type` should be a type parameter â€” the error will have the location of the
-- first expression with this type.
Error-Location : Type => type intrinsic
intrinsic "type" "error-location" : Error-Location

-- Suggest a fix to the user when generating a compile-time error with the
-- `Error` trait. `Message` and `Code` should both be text.
Error-Fix : Message Code => type intrinsic
intrinsic "type" "error-fix" : Error-Fix
