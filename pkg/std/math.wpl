[[no-std]]

use "fp.wpl"
use "util.wpl"

[help "Implements the `+` operator."]
Add : Left Right Sum => trait (Left -> Right -> Sum)
+ : addition operator (a b ~> Add a b)
instance (Add Number Number Number) : a -> b -> external "runtime" "add-number" a b
instance (Add Integer Integer Integer) : a -> b -> external "runtime" "add-integer" a b
instance (Add Natural Natural Natural) : a -> b -> external "runtime" "add-natural" a b
instance (Add Byte Byte Byte) : a -> b -> external "runtime" "add-byte" a b
instance (Add Signed Signed Signed) : a -> b -> external "runtime" "add-signed" a b
instance (Add Unsigned Unsigned Unsigned) : a -> b -> external "runtime" "add-unsigned" a b
instance (Add Float Float Float) : a -> b -> external "runtime" "add-float" a b
instance (Add Double Double Double) : a -> b -> external "runtime" "add-double" a b

[help "Implements the `-` operator."]
Subtract : Left Right Difference => trait (Left -> Right -> Difference)
- : addition operator (a b ~> Subtract a b)
instance (Subtract Number Number Number) : a -> b -> external "runtime" "subtract-number" a b
instance (Subtract Integer Integer Integer) : a -> b -> external "runtime" "subtract-integer" a b
instance (Subtract Natural Natural Natural) : a -> b -> external "runtime" "subtract-natural" a b
instance (Subtract Byte Byte Byte) : a -> b -> external "runtime" "subtract-byte" a b
instance (Subtract Signed Signed Signed) : a -> b -> external "runtime" "subtract-signed" a b
instance (Subtract Unsigned Unsigned Unsigned) : a -> b -> external "runtime" "subtract-unsigned" a b
instance (Subtract Float Float Float) : a -> b -> external "runtime" "subtract-float" a b
instance (Subtract Double Double Double) : a -> b -> external "runtime" "subtract-double" a b

[help "Implements the `*` operator."]
Multiply : Left Right Product => trait (Left -> Right -> Product)
* : multiplication operator (a b ~> Multiply a b)
instance (Multiply Number Number Number) : a -> b -> external "runtime" "multiply-number" a b
instance (Multiply Integer Integer Integer) : a -> b -> external "runtime" "multiply-integer" a b
instance (Multiply Natural Natural Natural) : a -> b -> external "runtime" "multiply-natural" a b
instance (Multiply Byte Byte Byte) : a -> b -> external "runtime" "multiply-byte" a b
instance (Multiply Signed Signed Signed) : a -> b -> external "runtime" "multiply-signed" a b
instance (Multiply Unsigned Unsigned Unsigned) : a -> b -> external "runtime" "multiply-unsigned" a b
instance (Multiply Float Float Float) : a -> b -> external "runtime" "multiply-float" a b
instance (Multiply Double Double Double) : a -> b -> external "runtime" "multiply-double" a b

[help "Implements the `/` operator."]
Divide : Left Right Quotient => trait (Left -> Right -> Quotient)
/ : multiplication operator (a b ~> Divide a b)
instance (Divide Number Number Number) : a -> b -> external "runtime" "divide-number" a b
instance (Divide Integer Integer Integer) : a -> b -> external "runtime" "divide-integer" a b
instance (Divide Natural Natural Natural) : a -> b -> external "runtime" "divide-natural" a b
instance (Divide Byte Byte Byte) : a -> b -> external "runtime" "divide-byte" a b
instance (Divide Signed Signed Signed) : a -> b -> external "runtime" "divide-signed" a b
instance (Divide Unsigned Unsigned Unsigned) : a -> b -> external "runtime" "divide-unsigned" a b
instance (Divide Float Float Float) : a -> b -> external "runtime" "divide-float" a b
instance (Divide Double Double Double) : a -> b -> external "runtime" "divide-double" a b

[help "Implements the `^` operator."]
Power : Left Right Power => trait (Left -> Right -> Power)
^ : power operator (a b ~> Power a b)
instance (Power Number Number Number) : a -> b -> external "runtime" "power-number" a b
instance (Power Integer Integer Integer) : a -> b -> external "runtime" "power-integer" a b
instance (Power Natural Natural Natural) : a -> b -> external "runtime" "power-natural" a b
instance (Power Byte Byte Byte) : a -> b -> external "runtime" "power-byte" a b
instance (Power Signed Signed Signed) : a -> b -> external "runtime" "power-signed" a b
instance (Power Unsigned Unsigned Unsigned) : a -> b -> external "runtime" "power-unsigned" a b
instance (Power Float Float Float) : a -> b -> external "runtime" "power-float" a b
instance (Power Double Double Double) : a -> b -> external "runtime" "power-double" a b

[help "Rounds down a number to the nearest integer."]
Floor : N => trait (N -> N)
floor :: N where (Floor N) => N -> N
floor : Floor
instance (Floor Number) : n -> external "runtime" "floor-number" n
instance (Floor Float) : n -> external "runtime" "floor-float" n
instance (Floor Double) : n -> external "runtime" "floor-double" n

[help "Rounds up a number to the nearest integer."]
Ceil : N => trait (N -> N)
ceil :: N where (Ceil N) => N -> N
ceil : Ceil
instance (Ceil Number) : n -> external "runtime" "ceil-number" n
instance (Ceil Float) : n -> external "runtime" "ceil-float" n
instance (Ceil Double) : n -> external "runtime" "ceil-double" n

[help "Calculates the square root of a number."]
Sqrt : N => trait (N -> N)
sqrt :: N where (Sqrt N) => N -> N
sqrt : Sqrt
instance (Sqrt Number) : n -> external "runtime" "sqrt-number" n
instance (Sqrt Float) : n -> external "runtime" "sqrt-float" n
instance (Sqrt Double) : n -> external "runtime" "sqrt-double" n
