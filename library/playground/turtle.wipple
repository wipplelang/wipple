-- The distance (in pixels) the turtle should move.
Distance : type Number

instance (Describe-Type Distance "a distance") : ...

-- Specify a distance in pixels.
pixels :: Number -> Distance
pixels : Distance

() where (Error ("missing unit for distance" ; Error-Fix "add `pixels`" ("`(_ pixels)`" Source))) =>
    instance (Mismatch Number Distance) : ...

-- Move the turtle forward by the specified distance.
forward :: Distance -> ()
forward : (Distance pixels) -> runtime-message "forward" pixels

instance (Highlight forward (Highlight-Category "turtle-motion" ; Highlight-Icon "arrow-upward")) : ...

-- Move the turtle backward by the specified distance.
backward :: Distance -> ()
backward : (Distance pixels) -> runtime-message "backward" pixels

instance (Highlight backward (Highlight-Category "turtle-motion" ; Highlight-Icon "arrow-downward")) : ...

-- An arc.
Arc : type {
    radius :: Distance
    angle :: Angle
}

-- Move the turtle along an arc.
arc :: Arc -> ()
arc : {
    radius : (Distance radius)
    angle : (Angle angle)
} -> runtime-message "arc" (radius ; angle)

instance (Highlight arc (Highlight-Category "turtle-motion" ; Highlight-Icon "switch-access-shortcut")) : ...

-- Rotate the turtle counterclockwise by the specified angle.
left :: Angle -> ()
left : (Angle degrees) -> runtime-message "left" degrees

instance (Highlight left (Highlight-Category "turtle-turn" ; Highlight-Icon "rotate-left")) : ...

-- Rotate the turtle clockwise by the specified angle.
right :: Angle -> ()
right : (Angle degrees) -> runtime-message "right" degrees

instance (Highlight right (Highlight-Category "turtle-turn" ; Highlight-Icon "rotate-right")) : ...

-- Set the pen color.
color :: Color -> ()
color : (Color color) -> runtime-message "color" color

instance (Highlight color (Highlight-Category "turtle-pen" ; Highlight-Icon "edit")) : ...

-- Draw a path and fill it with the specified color.
fill :: Result => Color {Result} -> Result
fill : (Color color) body -> do {
    runtime-message "begin-path" ()
    result : do body
    runtime-message "end-path" color
    result
}

instance (Highlight fill (Highlight-Category "turtle-pen" ; Highlight-Icon "colors")) : ...

-- The speed of the turtle, from `very-slow` to `very-fast`.
Speed : type Number

-- A very slow speed.
very-slow :: Speed
very-slow : Speed 0

-- A slow speed.
slow :: Speed
slow : Speed 0.25

-- The default speed.
normal :: Speed
normal : Speed 0.5

-- A fast speed.
fast :: Speed
fast : Speed 0.75

-- A very fast speed.
very-fast :: Speed
very-fast : Speed 1

-- Set the speed of the turtle.
speed :: Speed -> ()
speed : (Speed value) -> runtime-message "speed" value

instance (Highlight speed (Highlight-Category "control-flow" ; Highlight-Icon "speed")) : ...
