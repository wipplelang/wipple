---
previous:
  name: The type system
  link: ?lesson=intermediate/types
next:
  name: Patterns
  link: ?lesson=intermediate/patterns
---

---
id: JFUYSDYc
type: text
locked: true
---

# Making your own types

Let's say we want to store some information about a sport. We can do that with multiple variables, like so:

---
id: OvrEYGel
type: code
---

show-sport : name emoji players -> show ("_ _ has _ players per team" name emoji players)

basketball-name : "Basketball"
basketball-emoji : `üèÄ`
basketball-players : 5
show-sport basketball-name basketball-emoji basketball-players

soccer-name : "Soccer"
soccer-emoji : `‚öΩÔ∏è`
soccer-players : 11
show-sport soccer-name soccer-emoji soccer-players

---
id: H0FSve89
type: text
locked: true
---

That code is pretty difficult to read, and every time we want to add a new sport, we need three more variables. What if we could "package up" all that information into a single variable?

Well good news, because Wipple has something specifically designed for this problem ‚Äî¬†custom types!

To define a custom type, you use the `type` command and list out all the variables that go inside, along with their types:

---
id: Hw9MUMGS
type: code
---

Sport : type {
  name :: Text
  emoji :: Text
  players :: Number
}

---
id: zIFjBmc6
type: text
locked: true
---

If you're confused about what `::` means, make sure you read the previous lesson on Wipple's type system!

Alright, now we can make a new sport by giving each of those variables a value:

---
id: lW8g-I6i
type: code
lint: false
---

Sport : type {
  name :: Text
  emoji :: Text
  players :: Number
}

basketball : Sport {
  name : "Basketball"
  emoji : `üèÄ`
  players : 5
}

soccer : Sport {
  name : "Soccer"
  emoji : `‚öΩÔ∏è`
  players : 11
}

---
id: 0wNuTgaT
type: text
locked: true
---

Great! Notice the distinction between the double colon `::` and the single colon `:` ‚Äî¬†you always use the single colon when you're making a _value_ (like `"Basketball"` or `5`), and you only use the double colon when you're providing a _type_ (like `Text` or `Number`).

So now that we've packaged up our information into a single variable for each person, how do we get the information back out? Just use the `of` operator:

---
id: v3QyZwVD
type: code
---

Sport : type {
  name :: Text
  emoji :: Text
  players :: Number
}

basketball : Sport {
  name : "Basketball"
  emoji : `üèÄ`
  players : 5
}

show (emoji of basketball)

---
id: qsnUTqD-
type: text
locked: true
---

With all that in mind, we can rewrite the original example as follows:

---
id: 2DqbvzG5
type: code
---

Sport : type {
  name :: Text
  emoji :: Text
  players :: Number
}

show-sport : sport -> show ("_ _ has _ players per team" (name of sport) (emoji of sport) (players of sport))

basketball : Sport {
  name : "Basketball"
  emoji : `üèÄ`
  players : 5
}

soccer : Sport {
  name : "Soccer"
  emoji : `‚öΩÔ∏è`
  players : 11
}

show-sport basketball
show-sport soccer

---
id: jwh0OF5W
type: text
locked: true
---

Cool! Can you think of any other situations where a custom type is useful? Experiment in the space below!

---
id: kRXZ743Q
type: code
---
