[[help-url "https://wipple.dev/doc/turtle.html"]]

[sealed]
[help-convert-from Number ('value pixels)]
Pixels : type { px :: Number }

[help "Specify a distance in pixels."]
[help-group "Turtle Graphics"]
pixels :: Number -> Pixels
pixels : px -> Pixels { px }

Turtle : type { handle :: UI }

[context]
turtle :: Turtle
turtle : error "use of turtle graphics outside `with-turtle`"

[help "Create a new turtle drawing."]
[help-group "Turtle Graphics"]
with-turtle : syntax {
  with-turtle 'body -> {
    with-ui "/playground/ui/turtle/index.js" (handle -> {
      with (turtle : Turtle { handle }) 'body
    })
  }
}

[help "Set the width of the canvas."]
[help-group "Turtle Graphics"]
[help-alternative width]
width :: Pixels -> ()
width : { px } -> handle of turtle . message "width" px

[help "Set the height of the canvas."]
[help-group "Turtle Graphics"]
[help-alternative height]
height :: Pixels -> ()
height : { px } -> handle of turtle . message "height" px

[help "Set the background color of the canvas."]
[help-group "Turtle Graphics"]
background :: Text -> ()
background : color -> handle of turtle . message "background" color

[help "Set the speed of the turtle."]
[help-group "Turtle Graphics"]
speed :: Number -> ()
speed : speed -> {
  if (speed < 0) (error "`speed` must be at least 0")
  handle of turtle . message "speed" speed
}

[help "Set the x-y position of the turtle."]
[help-group "Turtle Graphics"]
position :: (Pixels ; Pixels) -> ()
position : ({ px : x } ; { px : y }) -> {
  handle of turtle . message "position-x" x
  handle of turtle . message "position-y" y
}

[help "Lift the pen up, allowing the turtle to move without drawing."]
[help-group "Turtle Graphics"]
[help-alternative pen-down]
pen-up :: () -> ()
pen-up : () -> handle of turtle . message "pen-up" ()

[help "Put the pen back down so the turtle can draw again."]
[help-group "Turtle Graphics"]
[help-alternative pen-up]
pen-down :: () -> ()
pen-down : () -> handle of turtle . message "pen-down" ()

[help "Set the pen color."]
[help-group "Turtle Graphics"]
color :: Text -> ()
color : color -> handle of turtle . message "color" color

[help "Fill the most recent path with a color."]
[help-group "Turtle Graphics"]
fill :: Text -> ()
fill : color -> handle of turtle . message "fill" color

[help "Move the turtle forward by the specified number of pixels."]
[help-group "Turtle Graphics"]
[help-alternative backward]
forward :: Pixels -> ()
forward : { px } -> handle of turtle . message "forward" px

[help "Move the turtle backward by the specified number of pixels."]
[help-group "Turtle Graphics"]
[help-alternative forward]
backward :: Pixels -> ()
backward : { px } -> handle of turtle . message "backward" px

[private]
angle-to-degrees :: Angle Number -> Number
angle-to-degrees : angle -> when angle {
  Degrees d -> d
  Radians r -> r * 180 / 3.14159
}

[help "Turn the turtle left by the specified angle."]
[help-group "Turtle Graphics"]
[help-alias "turn"]
[help-alternative right]
[help-alternative rotate]
left :: Angle Number -> ()
left : angle -> handle of turtle . message "left" (angle-to-degrees angle)

[help "Turn the turtle right by the specified angle."]
[help-group "Turtle Graphics"]
[help-alias "turn"]
[help-alternative left]
[help-alternative rotate]
right :: Angle Number -> ()
right : angle -> handle of turtle . message "right" (angle-to-degrees angle)

[help "Rotate the turtle to the specified angle."]
[help-group "Turtle Graphics"]
[help-alias "turn"]
[help-alternative left]
[help-alternative right]
rotate :: Angle Number -> ()
rotate : angle -> handle of turtle . message "rotate" (angle-to-degrees angle)

[help "Set the turtle icon."]
[help-group "Turtle Graphics"]
icon :: Text -> ()
icon : text -> handle of turtle . message "icon" text

[entrypoint]
entrypoint :: Entrypoint
entrypoint : program -> with-turtle { program () }
