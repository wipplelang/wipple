sections:
  - id: JrVs5wzW
    type: text
    value: "# Graphing functions\n\nNext, we'll learn how to plot mathematical functions on a graph! The syntax is very similar to turtle graphics â€”\_let's start by `use`-ing the `graphing` file:"
    locked: true
  - id: OnKm7Rv9
    type: code
    value: use "graphing.wpl"
  - id: fMuka6iQ
    type: text
    value: >-
      `graphing.wpl` gives us access to `with-graph`, which we can use just like
      `with-turtle`. Let's plot a simple example!
    locked: true
  - id: ru4E_6hT
    type: code
    value: "use \"graphing.wpl\"\n\nwith-graph {\n\tplot (x -> x ^ 3)\n}"
  - id: 9bhXSLxB
    type: text
    value: >-
      By default, the graph looks like the above. But we can change the bounds
      as well as the color!
    locked: true
  - id: VpC7Khuj
    type: code
    value: |-
      use "graphing.wpl"

      with-graph {
        min-y 0
        max-y 100
        color "blue"
        plot (x -> x ^ 2)
      }
  - id: veRXP0zH
    type: text
    value: >-
      You can also graph multiple functions at the same time, each with its own
      color:
    locked: true
  - id: 1wPIaNUA
    type: code
    value: "use \"graphing.wpl\"\n\nwith-graph {\n\tcolor \"red\"\n\tplot (x -> x)\n\n\tcolor \"green\"\n\tplot (x -> x ^ 2)\n\n\tcolor \"blue\"\n\tplot (x -> x ^ 3)\n}"
  - id: DCISESLf
    type: text
    value: >-
      Of course, we aren't limited to simple functions. We have the full power
      of Wipple at our disposal!
    locked: true
  - id: 5-ZKwSCT
    type: code
    value: "use \"graphing.wpl\"\n\nf : n -> when (floor n mod 4) {\n\t0 -> n * -2\n\t1 -> n * -1\n\t2 -> n * 1\n\t3 -> n * 2\n\t_ -> 0\n}\n\nwith-graph {\n\tmin-x 0\n\tmax-x 50\n\tmin-y -100\n\tmax-y 100\n\tplot f\n}"
previous:
  name: Drawing with turtle graphics
  link: ?lesson=learn/drawing-with-turtle-graphics
next:
  name: Making music
  link: ?lesson=learn/making-music
