Task-Group : type intrinsic
intrinsic "type" "task-group" : Task-Group

-- Wait for the provided function to be called before continuing.
with-continuation :: Result => ((Result -> ()) -> ()) -> Result
with-continuation : callback -> intrinsic "with-continuation" callback

-- Create a group of tasks to be executed at the same time. This function
-- returns once all of the tasks have finished.
with-task-group :: (Task-Group -> ()) -> ()
with-task-group : body -> intrinsic "with-task-group" body

-- Like `with-task-group`, but returns immediately with the task group. You must
-- call `end-task-group` to wait for the tasks to finish.
begin-task-group :: Task-Group
begin-task-group : intrinsic "begin-task-group"

-- Wait for the tasks to finish in a task group created by `begin-task-group`.
end-task-group :: Task-Group -> ()
end-task-group : task-group -> intrinsic "end-task-group" task-group

-- Run a task in a task group.
task :: {} -> Task-Group -> ()
task : body -> group -> intrinsic "task" group body

-- Execute code in the background without waiting for it to finish.
in-background :: {} -> ()
in-background : body -> intrinsic "in-background" body

-- Set a value for the current task.
set-task-local :: Value => Value -> ()
set-task-local : value -> intrinsic "set-task-local" value

-- Retrieve a value for the current task.
task-local :: Value => Maybe Value
task-local : intrinsic "task-local"

-- TODO: Delay and duration units
