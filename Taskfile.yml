version: "3"

tasks:
    dev:
        run: once
        cmds:
            - task: compile
            - .wipple/out

    test:
        run: once
        cmds:
            - cargo test --package=wipple-test -- {{.CLI_ARGS}}

    coverage:
        run: once
        cmds:
            - rm -rf coverage && mkdir -p coverage
            - grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore \"/*\" -o coverage/lcov.info

    # doctest:
    #     run: once
    #     cmds:
    #         - rm -rf .wipple/doctest && mkdir -p .wipple/doctest
    #         - for f in web/docs/src/tour/*.md; do echo -e "testing $(basename $f)" && wipple doctest $f --dependency .wipple/base.wippleinterface --link .wipple/base.wipplelibrary > .wipple/doctest/$(basename $f).xml; done

    compile:
        run: once
        deps:
            - base:compile
        cmds:
            - wipple compile test.wipple --dependency .wipple/base.wippleinterface --interface .wipple/test.wippleinterface --library .wipple/test.wipplelibrary
            - wipple link .wipple/*.wipplelibrary --output .wipple/out

    # vscode:install:
    #     run: once
    #     deps:
    #         - compiler:build
    #         - render:build
    #     dir: vscode
    #     cmds:
    #         - npx @vscode/vsce package --no-dependencies --skip-license --allow-missing-repository
    #         - code --install-extension wipple-vscode-0.0.0.vsix
    #         - rm wipple-vscode-0.0.0.vsix

    web:install-dependencies:
        run: once
        deps:
            - web:home:install-dependencies
            - web:docs:install-dependencies
            - web:playground:install-dependencies

    web:serve:
        run: once
        deps:
            - web:build
        cmds:
            - netlify dev

    web:build:
        run: once
        deps:
            - web:home:build
            - web:docs:build
            - web:playground:build
        dir: web
        cmds:
            - rm -rf dist && mkdir dist
            - cp -r home/_site/. dist
            - cp -r docs/book/. dist/docs
            - cp -r playground/dist/. dist/playground

    web:home:install-dependencies:
        run: once
        dir: web/home
        cmds:
            - npm install

    web:home:serve:
        run: once
        dir: web/home
        cmds:
            - npm run dev

    web:home:build:
        run: once
        dir: web/home
        cmds:
            - npm run build

    web:docs:install-dependencies:
        run: once
        dir: web/docs
        cmds:
            - if ! command -v mdbook; then cargo install --force mdbook; fi
            - if ! command -v mdbook-template; then cargo install --force mdbook-template; fi

    web:docs:prepare:
        run: once
        dir: web/docs
        cmds:
            - (cd ../../compiler && cargo test render_grammar_to_html)

    web:docs:serve:
        run: once
        deps:
            - web:docs:prepare
        dir: web/docs
        cmds:
            - mdbook serve

    web:docs:build:
        run: once
        deps:
            - web:docs:prepare
        dir: web/docs
        cmds:
            - mdbook build

    web:playground:install-dependencies:
        run: once
        dir: web/playground
        cmds:
            - npm install

    web:playground:bundle:
        run: once
        dir: web/playground
        cmds:
            - task cli:build
            - task base:compile
            - wipple compile ../../library/base/*.wipple --interface ../../.wipple/base.wippleinterface --library ../../.wipple/base.wipplelibrary
            - wipple bundle-for-playground ../../library/base/*.wipple --output ./public/library/base.wipplebundle
            - wipple bundle-for-playground ../../library/playground/turtle.wipple --dependency ../../.wipple/base.wippleinterface --link ../../.wipple/base.wipplelibrary --output ./public/library/turtle.wipplebundle
            - wipple bundle-for-playground ../../library/playground/music.wipple --dependency ../../.wipple/base.wippleinterface --link ../../.wipple/base.wipplelibrary --output ./public/library/music.wipplebundle
            - wipple bundle-for-playground ../../library/playground/math.wipple --dependency ../../.wipple/base.wippleinterface --link ../../.wipple/base.wipplelibrary --output ./public/library/math.wipplebundle
            - wipple bundle-for-playground ../../library/playground/game.wipple --dependency ../../.wipple/base.wippleinterface --link ../../.wipple/base.wipplelibrary --output ./public/library/game.wipplebundle
            - wipple bundle-for-playground ../../library/playground/physics.wipple --dependency ../../.wipple/base.wippleinterface --link ../../.wipple/base.wipplelibrary --output ./public/library/physics.wipplebundle
            - cp -r ../../library/help ./public/library

    web:playground:serve:
        run: once
        deps:
            - web:playground:bundle
        dir: web/playground
        cmds:
            - npm run dev

    web:playground:build:
        run: once
        deps:
            - web:playground:bundle
        dir: web/playground
        cmds:
            - ./web/playground/wasm/build.sh
            - npm run build

    base:compile:
        run: once
        cmds:
            - rm -rf .wipple
            - wipple compile library/base/*.wipple --interface .wipple/base.wippleinterface --library .wipple/base.wipplelibrary

    install-dependencies:
        run: once
        deps:
            - web:install-dependencies
        cmds:
            - if ! command -v wasm-pack; then cargo install --force wasm-pack; fi

    cli:build:
        run: once
        deps:
            - compiler:build
        dir: cli
        cmds:
            - cargo install --bin wipple --path . --force

    compiler:build:
        run: once
        cmds:
            - cargo build
